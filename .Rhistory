hist(datW$TAVE[datW$siteN == station_num],
freq = FALSE,
main = paste(levels(datW$NAME)[station_num]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
return()
}
# Creates histogram for Aberdeen
plot_station(1)
# Creates a histogram for Livermore
plot_station(2)
# Creates a histogram for Mandan Experiment Station
plot_station(3)
# Creates a histogram for Mormon Flat
plot_station(4)
# Creates a histogram for Morrisville
plot_station(5)
# Creates a histogram for Mormon Flat
plot_station(4)
###############################################################################
################################# Question 4 ##################################
###############################################################################
pnorm(0,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE))
pnorm(5,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE)) -
pnorm(0,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE))
dnorm(5,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE)) -
dnorm(0,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE))
pnorm(5,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE))
pnorm(0,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm=TRUE))
current_high_threshold <- qnorm(0.95,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm =TRUE))
current_high_threshold
# Find probability that temperature is greater than the current threshold for
# extreme high temperature if climate change increases the mean by 4 degrees C
datW$TAVE[datW$siteN == 1] + 4
datW$TAVE[datW$siteN == 1]
x <- c(1,2,3)
x+4
prob_extreme <- 1 - pnorm(current_high_threshold,
mean(datW$TAVE[datW$siteN == 1] + 4, na.rm = TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm = TRUE))
prob_extreme
View(datW)
View(datW)
View(datW)
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#FF0000")
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#00FFFF")
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#FFFFFF")
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
View(datW)
View(datW)
View(datW)
datW$year <- as.factor(datW$year)
# Find out all unique years
levels(datW$year)
help("aggregate")
annual_prcp <- aggregate(datW$PRCP, by=list(datW$NAME, datW$year), FUN="sum", na.rm=TRUE)
annual_prcp
annual_prcp <- aggregate(datW$PRCP, by=list(datW$NAME, datW$year), FUN="sum", na.rm=TRUE)
# Change column names
colnames(annual_prcp) <- c("NAME", "Year", "Annual Precipitation")
annual_prcp
annual_prcp <- aggregate(datW$PRCP, by=list(datW$NAME, datW$year), FUN="sum", na.rm=TRUE)
# Change column names
colnames(annual_prcp) <- c("Site", "Year", "Annual Precipitation")
annual_prcp
str(annual_prcp)
annual_prcp
annual_prcp[1]
annual_prcp[1][1]
annual_prcp[1][1]
annual_prcp$Year
annual_prcp$Site <- as.factor(annual_prcp$Site)
# Find out all unique site names
levels(annual_prcp$Site)
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
annual_prcp$Site <- as.factor(annual_prcp$Site)
# Find out all unique site names
levels(annual_prcp$Site)
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
annual_prcp$Site <- as.factor(annual_prcp$Site)
# Find out all unique site names
levels(annual_prcp$Site)
# Convert level to number for factor data type
annual_prcp$Site <- as.numeric(annual_prcp$Site)
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
annual_prcp
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
annual_prcp
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annnual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = TRUE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
annual_prcp$Year
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 2],
freq = FALSE,
main = paste(levels(datW$NAME)[2]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 4],
freq = FALSE,
main = paste(levels(datW$NAME)[4]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 5],
freq = FALSE,
main = paste(levels(datW$NAME)[5]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = TRUE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
# Histogram of annual precipitation for Mandan Experiment Station
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0033EE",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0055AA",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#0000AA",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#514DB7",
border = "#000000")
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3], na.rm == TRUE)
median(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3], na.rm == TRUE)
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3], na.rm = TRUE)
median(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3], na.rm = TRUE)
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation",
ylab = "Relative frequency",
col = "#3EC161",
border = "#000000")
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1], na.rm = TRUE)
median(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1], na.rm = TRUE)
hist(datW$PRCP[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation (mm)",
ylab = "Relative frequency",
col = "#0000FF",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Annual Precipitation (mm)",
ylab = "Relative frequency",
col = "#514DB7",
border = "#000000")
hist(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
freq = FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Annual Precipitation (mm)",
ylab = "Relative frequency",
col = "#3EC161",
border = "#000000")
prob_extreme <- pnorm(700,
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
na.rm = TRUE),
sd(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
na.rm = TRUE))
prob_extreme
Aberdeen_prob <- pnorm(700,
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
na.rm = TRUE),
sd(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 1],
na.rm = TRUE))
Mandan_prob <- pnorm(700,
mean(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
na.rm = TRUE),
sd(annual_prcp$`Annual Precipitation`[annual_prcp$Site == 3],
na.rm = TRUE))
Mandan_prob
Aberdeen_prob
# make a vector of tree heights in meters
heights <- c(30,41,20,22)
# convert to cm
heights_cm <- heights*100
heights_cm
datW <- read.csv("/Users/russell/Github/ENVST_206/Activity2_Data/noaa2011124.csv")
# Get more information about data frame
str(datW)
# Create vector with character objects
character_vector <- c('ab', 'cde', 'fghi', 'jklm', 'nopqr')
# Create vector with numeric objects
numeric_vector <- c(-10.5, 3.6, -9, -6.7, 1000.555)
# Create vector with integer objects
integer_vector <- c(1,20, 300, 4000, 5005)
# Create vector with logical objects
logical_vector <- c(TRUE, FALSE, TRUE, FALSE, FALSE)
directions <- c('North', 'East', 'West', 'East', 'South', 'North')
fdirections <- factor(directions, levels = c('North', 'South', 'East', 'West'))
letters <- c('a', 'b', 'c', 'a', 'b', 'b','b', 'c')
fletters <- as.factor(letters)
numbers <- c('one', 'three', 'two', 'three', 'two')
fnumbers  <- factor(numbers, levels = c('one', 'two', 'three'))
seasons <- c('Winter', 'Fall', 'Winter', 'Summer', 'Spring', 'Fall')
fseasons <- as.factor(seasons)
colors <- c('red', 'blue', 'green', 'red', 'blue', 'red', 'green', 'red')
fcolors <- as.factor(colors)
# Create vector with factor objects
factor_vector <- c(fdirections, fletters, fnumbers, fseasons, fcolors)
factor_vector
is.factor(factor_vector)
# Convert NAME column into a factor
datW$NAME <- as.factor(datW$NAME)
# Find out all unique site names
levels(datW$NAME)
# look at mean maximum temperature for Aberdeen
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"])
# Ignore NA
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"], na.rm=TRUE)
# Standard Deviation of the maximum temperature for Aberdeen
sd(datW$TMAX[datW$NAME == "ABERDEEN, WA US"], na.rm=TRUE)
# Average daily temperature (temperature between the min and max)
datW$TAVE <- datW$TMIN + ((datW$TMAX-datW$TMIN)/2)
# Get the mean across all sites
averageTemp <- aggregate(datW$TAVE, by=list(datW$NAME), FUN="mean", na.rm=TRUE)
# Change column names
colnames(averageTemp) <- c("NAME", "MAAT")
# Convert level to number for factor data type
datW$siteN <- as.numeric(datW$NAME)
# Create histogram for the first site in our levels
hist(datW$TAVE[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
# Look up arguments in hist functions
help(hist)
# Function that creates a histogram for any weather station given the weather
# station number
plot_station <- function(station_num){
hist(datW$TAVE[datW$siteN == station_num],
freq = FALSE,
main = paste(levels(datW$NAME)[station_num]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
return()
}
# Creates histogram for Aberdeen
plot_station(1)
# Creates a histogram for Livermore
plot_station(2)
# Creates a histogram for Mandan Experiment Station
plot_station(3)
# Creates a histogram for Mormon Flat
plot_station(4)
# Creates a histogram for Morrisville
plot_station(5)
plot_station(1)
current_high_threshold <- qnorm(0.95,
mean(datW$TAVE[datW$siteN == 1], na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm =TRUE))
# Find probability that temperature is greater than the current threshold for
# extreme high temperature if climate change increases the mean by 4 degrees C
prob_extreme <- 1 - pnorm(current_high_threshold,
mean(datW$TAVE[datW$siteN == 1] + 4, na.rm = TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm = TRUE))
hist(datW$TAVE[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
# Creates histogram for Aberdeen
plot_station(1)
# Creates a histogram for Livermore
plot_station(2)
# Creates histogram for Aberdeen
plot_station(1)
hist(datW$TAVE[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
# Change column names
colnames(annual_prcp) <- c("Site", "Year", "Annual Precipitation")
annual_prcp <- aggregate(datW$PRCP, by=list(datW$NAME, datW$year), FUN="sum",
na.rm=TRUE)
# Change column names
colnames(annual_prcp) <- c("Site", "Year", "Annual Precipitation")
annual_prcp
# Look up arguments in hist functions
help(hist)
# Create vector with factor objects
factor_vector <- c(fdirections, fletters, fnumbers, fseasons, fcolors)
factor_vector
hist(datW$TAVE[datW$siteN == 1],
freq = FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = expression("Average daily temperature " (degree*C)),
ylab = "Relative frequency",
col = "#00FFFF",
border = "#FF0000")
# Creates histogram for Aberdeen
plot_station(1)
# Creates a histogram for Mormon Flat
plot_station(4)
prob_extreme <- 1 - pnorm(current_high_threshold,
mean(datW$TAVE[datW$siteN == 1] + 4, na.rm = TRUE),
sd(datW$TAVE[datW$siteN == 1], na.rm = TRUE))
prob_extreme
prob_extreme <- 1 - pnorm(current_high_threshold,
mean(datW$TAVE[datW$siteN == 1], na.rm = TRUE) + 4,
sd(datW$TAVE[datW$siteN == 1], na.rm = TRUE))
prob_extreme
View(datW)
annual_prcp <- aggregate(datW$PRCP, by=list(datW$NAME, datW$year), FUN="sum",
na.rm=TRUE)
annual_prcp
###############################################################################
################################### Matrices ##################################
###############################################################################
# get more info on matrix function
help(matrix)
Mat <- matrix(c(1,2,3,4,5,6), ncol = 2, byrow = TRUE)
Mat
Mat <- matrix(c(1,2,3,4,5,6,7), ncol = 2, byrow = TRUE)
Mat
Mat <- matrix(c(1,2,3,4,5), ncol = 2, byrow = TRUE)
Mat
Mat <- matrix(c(1,2,3,4), ncol = 2, byrow = TRUE)
Mat
Mat.bycol <- matrix(c(1,2,3,4,5,6), ncol = 2, byrow=FALSE)
Mat.bycol
# subset the matrix to look at row 1, column2
Mat.bycol[1,2]
# look at all values in row 1
Mat.bycol[1,]
# look at all values in column 2
Mat.bycol[,2]
help("t.test")
seasons <- c('Winter', 'Fall', 'Winter', 'Summer', 'Spring', 'Fall')
fseasons <- as.factor(seasons)
x <- c(1,2,3,1,2)
y <- as.factor(x)
y
x <- c(1.1, 1.1, 2.2, 1.1, 2.2)
y <- as.factor(x)
y
x <- c(TRUE, FALSE, FALSE, TRUE, FALSE)
x
y <- as.factor(x)
y
